version: 2.1

orbs:
  snyk:
    commands:
      install:
        description: Install Snyk
        steps:
          - run:
              name: Install Snyk
              command: |
                if [[ ! -x "/usr/local/bin/snyk" ]]; then
                  LATEST_SNYK_CLI_VERSION=$(curl https://static.snyk.io/cli/latest/version)
                  echo "Downloading Snyk CLI version ${LATEST_SNYK_CLI_VERSION}"
                  curl -sO https://static.snyk.io/cli/v${LATEST_SNYK_CLI_VERSION}/snyk-linux
                  curl -sO https://static.snyk.io/cli/v${LATEST_SNYK_CLI_VERSION}/snyk-linux.sha256
                  sha256sum -c snyk-linux.sha256
                  sudo mv snyk-linux /usr/local/bin/snyk
                  sudo chmod +x /usr/local/bin/snyk
                fi
                snyk config set disableSuggestions=true
                snyk auth $SNYK_TOKEN
      scan_open_source:
        parameters:
          project:
            description: The name of the Snyk project to publish results
            type: string
          current_branch:
            description: |
              If current_branch equals the monitor_branch, then report the results to Snyk.
              The variable `pipeline.git.branch` is not in scope in orbs
            type: string
          monitor_branch:
            description: If current_branch equals the monitor_branch, then report the results to Snyk
            type: string
            default: main
          severity_threshold:
            description: Fail the build if issues are found with severity equal to or above this threshold 
            type: enum
            enum: [critical, high, medium, low]
            default: low
        steps:
          - install
          - run:
              name: Snyk OpenSource Scan
              command: snyk test --severity-threshold=<<parameters.severity_threshold>>
          - when:
              condition:
                equal: [ <<parameters.current_branch>>, <<parameters.monitor_branch>> ]
              steps:
                - run:
                    name: Report OpenSource results
                    command: snyk monitor --project-name=<<parameters.project>> --org=narwhal-xqs
      scan_code:
        parameters:
          severity_threshold:
            description: Fail the build if issues are found with severity equal to or above this threshold 
            type: enum
            enum: [critical, high, medium, low]
            default: low
        steps:
          - install
          - run:
              name: Snyk Code Scan
              command: snyk code test --severity-threshold=<<parameters.severity_threshold>>

defaults: &defaults
  resource_class: small
  working_directory: ~/policy

executors:
  docker-node:
    parameters:
      version:
        default: '18.16.0'
        type: string
    docker:
      - image: cimg/node:<<parameters.version>>

commands:
  npmrc:
    steps:
      - run:
          name: Create .npmrc
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc

  install:
    steps:
      - run:
          name: Install dependencies
          command: npm install
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/

jobs:
  install:
    <<: *defaults
    executor:
      name: docker-node
    steps:
      - checkout
      - npmrc
      - install
  lint:
    <<: *defaults
    executor:
      name: docker-node
    steps:
      - checkout
      - attach_workspace:
          at: ~/policy
      - run:
          name: Run linting
          command: npm run lint
  scan:
    <<: *defaults
    executor:
      name: docker-node
    resource_class: medium
    steps:
      - checkout
      - attach_workspace:
          at: ~/policy
      - snyk/scan_open_source:
          project: snyk/policy
          current_branch: << pipeline.git.branch >>
          monitor_branch: master
      - snyk/scan_code:
          severity_threshold: high

  test:
    <<: *defaults
    parameters:
      version:
        type: string
    executor:
      name: docker-node
      version: <<parameters.version>>
    steps:
      - checkout
      - attach_workspace:
          at: ~/policy
      - run:
          name: Run tests
          command: npm run test
      - store_test_results:
          path: reports/jest/
      - store_artifacts:
          path: reports/jest/
  release:
    <<: *defaults
    executor:
      name: docker-node
    steps:
      - checkout
      - npmrc
      - install
      - run:
          name: Release on GitHub
          command: npx semantic-release

workflows:
  version: 2
  test_and_release:
    jobs:
      - install:
          name: Install
      - lint:
          name: Lint
          requires:
            - Install
          filters:
            branches:
              ignore:
                - master
      - test:
          name: Test
          requires:
            - Lint
          matrix:
            parameters:
              version:
                - 12.22.10
                - 14.19.0
                - 16.14.0
                - 18.16.0
          filters:
            branches:
              ignore:
                - master

      - scan:
          name: Snyk Vuln Scan
          context: narwhal-policy
          requires:
            - Install

      - release:
          name: Release
          context: narwhal-policy
          filters:
            branches:
              only:
                - master

  Daily_Scan:
    jobs:
      - install:
          name: Install
      - scan:
          name: Snyk Vuln Scan
          context: narwhal-policy
          requires:
            - Install
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
